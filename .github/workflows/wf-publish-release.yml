name: Publish Release

on:
  # This workflow is triggered when the main pipeline completes:
  workflow_run:
    workflows: [Build and Deploy] # the name of the triggering workflow
    types: [completed] # Only trigger on completion
    branches: [main] # Only trigger on main

jobs:
  get-prod-oidc-role:
    name: Get Prod OIDC role 
    runs-on: ubuntu-22.04
    environment: prod # Using prod to force manual deployment protection (approve/reject) and to get the OIDC role needed to push image to prod ecr registry.
    steps: 
      - name: OIDC Prod Role
        id: oidc-prod-role
        run : | 
          echo "AWS_OIDC_ROLE_ARN=${{ vars.ONPREM_OIDC_ROLE_ARN }}" >> "$GITHUB_OUTPUT"
    outputs: 
      AWS_OIDC_ROLE_ARN: ${{ steps.oidc-prod-role.outputs.AWS_OIDC_ROLE_ARN }}

  get-nonprod-oidc-role:
    name: Get Non-Prod OIDC role
    runs-on: ubuntu-22.04
    environment: dev
    steps: 
      - name: OIDC Prod Role and S3 bucket name
        id: oidc-nonprod-role
        run : | 
          echo "AWS_OIDC_ROLE_ARN=${{ vars.ONPREM_OIDC_ROLE_ARN }}" >> "$GITHUB_OUTPUT"
    outputs: 
      AWS_OIDC_ROLE_ARN: ${{ steps.oidc-nonprod-role.outputs.AWS_OIDC_ROLE_ARN }}

  # Job: Create a release
  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    needs: [get-nonprod-oidc-role,get-prod-oidc-role]

    # Grant the pipeline contents: write and actions:read so that create-release can push tags
    permissions:
      contents: write
      actions: read
      id-token: write   # Required for OIDC token generation in deployment

    # This job outputs the tag generated by the "create_release" step
    outputs:
      generated-tag: ${{ steps.create_release.outputs.generated-tag }}

    steps:
      # Step 1: Create a release
      - name: Create Release
        id: create_release
        uses: cuscal/app-eengineering-shared-githubactions/actions/dist/create-release@v1.0
        # This step passes the ID of the workflow run that triggered this workflow to the "create-release" action
        with:
          workflow-run-id: ${{ github.event.workflow_run.id }}
          

