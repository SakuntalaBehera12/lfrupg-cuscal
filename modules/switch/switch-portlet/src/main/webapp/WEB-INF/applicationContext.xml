<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
<context:property-placeholder
	location="file:${catalina.home}/../property-files/reports/datasources.properties,
				  file:${catalina.home}/../property-files/reports/reports.properties" />

		<!-- If generic properties files need to be created for support guys to maintain
		<context:property-placeholder
		location="file:c:/properties/content/datasources.properties" />-->

<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

<!-- Connection Pool <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.default.driverClassName}"
		/> <property name="url" value="${jdbc.default.url}" /> <property name="username"
		value="${jdbc.default.username}" /> <property name="password" value="${jdbc.default.password}"
		/> </bean>-->

<bean class="org.springframework.jndi.JndiObjectFactoryBean" id="jndiDataSource">
	<property name="jndiName" value="${jndi.name}" />
	<property name="resourceRef" value="${jndi.resourceRef}" />
</bean>

<bean
	class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
	id="sessionFactory"
>
	<property name="dataSource" ref="jndiDataSource" />
	<property name="annotatedClasses">
		<list>
			<value>au.com.cuscal.connect.domain.ReportTypeCategory</value>
			<value>au.com.cuscal.connect.domain.ReportType</value>
			<value>au.com.cuscal.connect.domain.ReportFrequency</value>
			<value>au.com.cuscal.connect.domain.ReportMetadata</value>
			<value>au.com.cuscal.connect.domain.ReportOwner</value>
			<value>au.com.cuscal.connect.domain.ReportAccess</value>
			<value>au.com.cuscal.connect.domain.ReportBlob</value>
			<value>au.com.cuscal.connect.domain.ReportMetaBlobKey</value>
			<value>au.com.cuscal.connect.domain.ReportPortalPermissions</value>
			<value>au.com.cuscal.connect.domain.ReportPortalUsersFavourite</value>
		</list>
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			<prop key="hibernate.jdbc.use_get_generated_keys">${hibernate.jdbc.use_get_generated_keys}</prop>
			<!-- Caching properties -->
			<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
			<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
			<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
			<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
			<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
		</props>
	</property>
</bean>

<bean
	class="org.springframework.orm.hibernate5.HibernateTransactionManager"
	id="hibernateTransactionManager"
>
	<property name="sessionFactory" ref="sessionFactory" />
</bean>

<!--<bean id="openSessionInViewInterceptor" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>-->

<bean class="au.com.cuscal.connect.dao.ReportMetadataDaoImpl" id="reportMetadataDao" />

</beans>